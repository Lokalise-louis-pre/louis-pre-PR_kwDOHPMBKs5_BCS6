{"version":3,"file":"components-TopBanner-TopBanner-stories-mdx.02e9f66b.iframe.bundle.js","mappings":";AAiBA;AAEA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;AAIA;AACA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;AAIA;AACA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;AAIA;AACA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAKA;;;AAwBA;;;;AC9KA;;AAMA","sources":["webpack://@lokalise/louis/./src/components/IconButton/styles.ts","webpack://@lokalise/louis/./src/components/Link/Link.ts"],"sourcesContent":["import { css, modifier, styled, variants } from '@lokalise/styled';\n\nimport type { Appearance } from './IconButton';\nimport { spacing, value } from '../../utils/theme';\nimport { Pressable } from '../Pressable';\n\nexport type Size = 'xs' | 'sm' | 'md' | 'lg';\n\ntype IconButtonProps = {\n\t$appearance: Appearance;\n\t$size: Size;\n\t$active?: boolean;\n\tdisabled?: boolean;\n\t$isLoading: boolean;\n};\n\nconst variantColorStyles = css<IconButtonProps>`\n\t${variants('$appearance', {\n\t\tprimary: css`\n\t\t\tcolor: ${value('color.text.default')};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.action.secondary.hover')};\n\t\t\t\tcolor: ${value('color.text.link.hover')};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.action.secondary.hover')};\n\t\t\t\tcolor: ${value('color.text.link.hover')};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus-visible:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.action.secondary.hover')};\n\t\t\t\tcolor: ${value('color.text.link.hover')};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'$active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${value('color.background.active')};\n\t\t\t\t\tcolor: ${value('color.text.active')};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t\tsecondary: css`\n\t\t\tcolor: ${value('color.text.default')};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.action.tertiary.hover')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.action.tertiary.hover')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus-visible:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.action.tertiary.hover')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'$active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${value('color.background.active')};\n\t\t\t\t\tcolor: ${value('color.text.active')};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t\tverified: css`\n\t\t\tcolor: ${value('color.text.default')};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.warning')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.border.warning')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus-visible:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.warning')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'$active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${value('color.background.warning')};\n\t\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t\treviewed: css`\n\t\t\tcolor: ${value('color.text.default')};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.success')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.border.success')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus-visible:not([disabled]) {\n\t\t\t\tbackground-color: ${value('color.background.success')};\n\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'$active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${value('color.background.success')};\n\t\t\t\t\tcolor: ${value('color.text.default')};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t})}\n`;\n\nconst variantSizeStyles = css<IconButtonProps>`\n\t${variants('$size', {\n\t\txs: css`\n\t\t\theight: ${value('size.height.iconbutton.extra-small')};\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: calc(${value('size.height.iconbutton.extra-small')} - ${spacing(2)});\n\t\t`,\n\t\tsm: css`\n\t\t\theight: ${value('size.height.iconbutton.small')};\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: calc(${value('size.height.iconbutton.small')} - ${spacing(2)});\n\t\t`,\n\t\tmd: css`\n\t\t\theight: ${value('size.height.iconbutton.default')};\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: calc(${value('size.height.iconbutton.default')} - ${spacing(2)});\n\t\t`,\n\t\tlg: css`\n\t\t\theight: ${value('size.height.iconbutton.large')};\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: calc(${value('size.height.iconbutton.large')} - ${spacing(2)});\n\t\t`,\n\t})}\n`;\n\nexport const Container = styled(Pressable)<IconButtonProps>`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground-color: transparent;\n\ttransition:\n\t\tbackground-color ${value('motion.speed.1')},\n\t\tcolor ${value('motion.speed.1')};\n\tborder: 0;\n\tborder-radius: ${value('radius.iconbutton')};\n\ttext-decoration: none;\n\n\t${variantColorStyles}\n\t${variantSizeStyles}\n\n\t// disabled\n    &:disabled {\n\t\tcursor: not-allowed;\n\t\tcolor: ${value('color.text.disabled')};\n\n\t\t${modifier(\n\t\t\t'$isLoading',\n\t\t\tcss<IconButtonProps>`\n\t\t\t\tcolor: initial;\n\t\t\t\tcursor: auto;\n\t\t\t\t${variantColorStyles}\n\t\t\t`,\n\t\t)}\n\t}\n`;\n","import { css, modifier, styled } from '@lokalise/styled';\nimport type { FC } from 'react';\n\nimport { withLinkStyle } from '../../utils/styles';\nimport { color } from '../../utils/theme';\nimport type { PressableProps } from '../Pressable';\nimport { Pressable } from '../Pressable';\n\nexport type LinkProps = PressableProps;\n\n// By adding explicit type, it provides better types in final package. Otherwise,\n// for some reason styled causes the types to be messed up a bit.\nexport const Link: FC<LinkProps> = styled(Pressable)<LinkProps>`\n\t${withLinkStyle};\n\n\t${modifier(\n\t\t({ href }: PressableProps) => !href,\n\t\tcss`\n\t\t\t&:disabled {\n\t\t\t\tcursor: not-allowed;\n\t\t\t\tcolor: ${color('text.disabled')};\n\t\t\t}\n\t\t`,\n\t)}\n`;\n\nLink.displayName = 'Link';\n"],"names":[],"sourceRoot":""}